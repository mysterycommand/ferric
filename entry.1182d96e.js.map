{"version":3,"sources":["../pkg/ferric.js","lib.rs","entry.ts"],"names":["init","wasm","run","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","getStringFromWasm","ptr","len","decode","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","passStringToWasm","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeInto","arg","size","__wbindgen_malloc","offset","mem","code","charCodeAt","slice","__wbindgen_realloc","view","written","buf","encode","set","cachegetUint32Memory","getUint32Memory","Uint32Array","module","Error","result","imports","wbg","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","retptr","stack","retlen","__wbg_error_4bb6c2a97407129a","varg0","__wbindgen_free","console","error","__widl_f_log_1_","log","__wbindgen_throw","URL","Request","response","fetch","WebAssembly","instantiateStreaming","catch","e","warn","then","r","arrayBuffer","bytes","instantiate","Instance","instance","exports","__wbindgen_wasm_module","require"],"mappings":"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","file":"entry.1182d96e.js","sourceRoot":"../src","sourcesContent":["\nlet wasm;\n\n/**\n* @returns {void}\n*/\nexport function run() {\n    return wasm.run();\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            arg = arg.slice(offset);\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + arg.length * 3);\n            const view = getUint8Memory().subarray(ptr + offset, ptr + size);\n            const ret = cachedTextEncoder.encodeInto(arg, view);\n\n            offset += ret.written;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            const buf = cachedTextEncoder.encode(arg.slice(offset));\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + buf.length);\n            getUint8Memory().set(buf, ptr + offset);\n            offset += buf.length;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction init(module) {\n    if (typeof module === 'undefined') {\n        throw new Error('the `module` argument is required for use with `parcel-plugin-wasm-pack`');\n    }\n    let result;\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        let varg0 = getStringFromWasm(arg0, arg1);\n        return addHeapObject(varg0);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_new_59cb74e423758ede = function() {\n        return addHeapObject(new Error());\n    };\n    imports.wbg.__wbg_stack_558ba5917b466edd = function(ret, arg0) {\n\n        const retptr = passStringToWasm(getObject(arg0).stack);\n        const retlen = WASM_VECTOR_LEN;\n        const mem = getUint32Memory();\n        mem[ret / 4] = retptr;\n        mem[ret / 4 + 1] = retlen;\n\n    };\n    imports.wbg.__wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n        let varg0 = getStringFromWasm(arg0, arg1);\n\n        varg0 = varg0.slice();\n        wasm.__wbindgen_free(arg0, arg1 * 1);\n\n        console.error(varg0);\n    };\n    imports.wbg.__widl_f_log_1_ = function(arg0) {\n        console.log(getObject(arg0));\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        let varg0 = getStringFromWasm(arg0, arg1);\n        throw new Error(varg0);\n    };\n\n    if (module instanceof URL || typeof module === 'string' || module instanceof Request) {\n\n        const response = fetch(module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            result = WebAssembly.instantiateStreaming(response, imports)\n            .catch(e => {\n                console.warn(\"`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                return response\n                .then(r => r.arrayBuffer())\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            });\n        } else {\n            result = response\n            .then(r => r.arrayBuffer())\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        }\n    } else {\n\n        result = WebAssembly.instantiate(module, imports)\n        .then(result => {\n            if (result instanceof WebAssembly.Instance) {\n                return { instance: result, module };\n            } else {\n                return result;\n            }\n        });\n    }\n    return result.then(({instance, module}) => {\n        wasm = instance.exports;\n        init.__wbindgen_wasm_module = module;\n\n        return { run };\n    });\n}\n\nexport default init;\n\n","import init from '../pkg/ferric.js';\nmodule.exports = init(require('../pkg/ferric_bg.wasm'));\n","import { run } from './lib.rs';\nimport './style.css';\n\nrun();\n"]}