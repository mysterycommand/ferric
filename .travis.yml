language: rust
rust: stable

cache:
  cargo: true
  directories:
    # cache yarn
    - $HOME/.cache/yarn

    # cache npm
    - $HOME/.npm
    - node_modules
    - $TRAVIS_BUILD_DIR/node_modules

    # cache parcel
    - $TRAVIS_BUILD_DIR/.cache

env:
  global:
    secure: mhebtAOfkCV5hasrFML3vaRrUxqWyrpIhPa8eGvdgGFHFEXl0E19gfDe76431wkxcKXKLpc+85ycdLdO5PPZTxiWe2Q2OvLmi2LJBqoP2oh+YPJKmQLi74Bydj7V2GpjVC1iCfJm/db4LIWzEbtdZ8iAZBVJyDKqqnHfM/1avbdcLJ5E5unwnboleWLYRufuCzj+RpbpI8vAfI2W+DaWir8ANrcFYiRmQfTF/ONJPk2zKvSkYrZ8b2zZDLmLFWRSBvP8Wt4f3wRlBoo2mckYbrGaFmg/yJOjriKZ5tqzLzURTokaMhu1QiyVhSQ01zeA9HSI4VLK7Pm5mmued794qGT2sNvQEk4DnhYX/ja/V3VIxhllHyaBCZflpqXc8hhA1PwhtsdVPZzU4YbUAcBZeDpNefJjjP8bSzy1R/TvTaquMfprrke2kfh622e1uN3BZDpzd+wIskzsy68vbeB4DrvaAApHanmdJbDIrBPZUYdBaFvReOfUaYYOIXGO3vul+aw2OgToKHbNxETRrHQCTyMDCXE+7w88sEda1TexEhjLcuODq4s+VxxBWznjxZaNU5HjmGT93Cn7nIzrDn0uisjona3tX9+WJAFNaBykvWz4MrfgWaDoJFn5UmxC20166C2da6Afa4ZmAvyqNX2d3RSAYZ6u1ZA9K/v6Xdw/ghk=
    secure: Y9lP0ui2I59W2kqyqeupldKSwsO5D/orL2iA4wHPBofYtKU9aeuElnikn8uNEDJHR38jsNKnAfMTjAT9NhODdb9zWqfd/bu/0d5a9wlGurytR6auzcY9+UT7GX3lujJd5LYXIqZlGMp7zgF9/SvmKFpwiTYLrRxP7H3HbZXKwKAGRKlA3YL8437V+17X2ReVRq07MTOkACmaWSjCCCNn3X5gvEl0zp4ES9aSgMNLNQuhWQnooeEKvz+3DmAIeeG5Zo0nf/zVt06cuWyzrHE9aI4QIcImT5XT+C9vTRM7QcbAbNAa+uHNles0YaIxhgPDJ0QdX78o1nSe2TKtzGUs6nt0LcEa9TmYUFlsy19EiizUHl2nXooH5J4MkTI3XcGKUUKPskHBxA4++VDXAo9tzoj7Gi3Dfyj/19OsdFhplS/gAaUpAXTBO7E4l1v4slyRSuK2ZkH3U0tExN8Fq5kuq6B2sBhc449QsxZuQ6CYl16QmvRGrIIOpU4B+gikIt3HeaiF1gEWsYKeYh7CNsLB1zK/sIeSYKM6lOk7PBd6y321FPvQtN5droOEpBQqUtQonI7qggJ4wctQIGcwlUYSooIlMhLW4VIvNO8L28cAOBsHG04M7GoF55c5Iy3Wn9zvkYf6vMdxWjCcjzL/5ITiVmnf2CruSyrg/3uZM8LbInw=
    secure: vKd3DD1YyAkbYsF6ZrfgfZ3FijcE8WvD5dqaWhRSpMa/ymRCF4Mby3JMsP155oxn3MKCnKjnwEpzAhk/ZzrwmtmtGCFyTHZ+3WQqI7/3oj2i5y+yAm7OGRaZglrQNSxPsuaEAHIq5KMS76jPNA1VWNdO/njDYQYCxH1E37Hn/kfyBQuXYb1X7IFEkHQ+h211rnZsOpBi63sjwRiZD1VLY7G02xxasEWoq/S2M5F+NvCa/okyZlSyJ7HpJI18/hwF0DITVb7oGS40ICI9u40mID79FOOKu6eYn3QE/cMAVIk8ZSDoZCKGw6yvF2RSJ9EU7oOVmLUb/VHJz6Fsnkz7mGcQeTKfdRVUEOQgQMFsnptMSNRDMOqgAsmoSJbFNXSINx3cJj3tsG4INRlgQ+CYN1DhhweKKW6awMOpCmvds+FanihMatNw0NFH4+jHi9NQsEzcRdePhRidvC3XmpscEMuJzc6PZfaB/daXCTckxqscv/FtW2qWr137QdjjKYKtwEpEBuPZm7UjLFjBXfVa6r5ujprSAo48vMkhopg4+ZWWkv8oLSbUOZTcshIMc44v9EYXKc5sbtvh2HfGdm1ZvulQHM3xH+/EPnKGcapejFLTdjTEQHJqx0mdivC90CaVOI8scERI83wvsqxrIt7T4H3CaiWyh4nNKjOHZPGkXJo=

before_install:
  # add node version, read from .nvmrc
  - nvm install

  # add components and targets
  - rustup component add clippy
  - rustup component add rustfmt
  - rustup target add wasm32-unknown-unknown

  # get wasm-pack, install-update
  - (test -x $HOME/.cargo/bin/wasm-pack || cargo install wasm-pack)
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - cargo install-update -a

  # get the right npm version
  - NPM_VERSION=`node -pe "require('./package.json').engines.npm"`
  - if [ `npm --version` != "$NPM_VERSION" ]; then
    npm install --global npm@${NPM_VERSION};
    fi

  # get the right yarn version
  - YARN_VERSION=`node -pe "require('./package.json').engines.yarn"`
  - if [ `yarn --version` != "$YARN_VERSION" ]; then
    curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION;
    export PATH=$HOME/.yarn/bin:$PATH;
    fi

  - yarn install

before_script:
  # code climate's coverage reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
    > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - './cc-test-reporter before-build'

script:
  - yarn lint
  - yarn test
  - yarn build

after_success:
  - test $TRAVIS_PULL_REQUEST != "false" && npx semantic-release-github-pr

deploy:
  # deploy a git tag, release notes, bump package.json, update READMEs
  - provider: script
    skip_cleanup: true
    script: npx semantic-release
    on:
      branch: master

  # deploy the site
  - provider: pages
    repo: mysterycommand/ferric
    target_branch: gh-pages
    github_token: '$GH_TOKEN'
    allow_empty_commit: true
    skip_cleanup: true
    keep_history: true
    local_dir: dist/
    on:
      branch: master

after_script:
  # report coverage
  - './cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT'
