language: rust
rust: stable

cache:
  cargo: true
  directories:
    # cache yarn
    - $HOME/.cache/yarn

    # cache npm
    - $HOME/.npm
    - node_modules
    - $TRAVIS_BUILD_DIR/node_modules

    # cache parcel
    - $TRAVIS_BUILD_DIR/.cache

env:
  global:
    - secure: KaRcTSbE9roXcyY8r9iWCmaOOAGIZwAK8VRQCcX3Acd8kWnHW0oWJ6GM73pGXKNJRIxfTryeYF+uryX2z2zqAffkd3n+3ZT719JB/p1Mdvv82xAyxg4G0QT5Cc7w9ESEjCuPTqgOrg510BwrZhxgYbr002j3OfTdC6gipllZ7qGk7GdHf88rGNoWK0CcdKlZFMM8ELnpi3dq5EPefSpMMABQ3s2mlWdtv1Kc3+hrSUFaUCpUELjPucOJo6dRDOtwdMeonzxDqRoDka2+p7oXW7N8FMNjPro5GMyoPxY8oncvled/obT/KONXp1Q8JJWDdb47uT8WTlmTJNVhWlV+cFyXKWa8ECaqGPykhWY+RqrFDXEDuBoTlbBC1efvjgageN0Y1mwTqC1gjeDMdPT878nOQW2YJBvEQGbnVuUmUySCmvZA4z5VLKTxWUTbWVA63CJ3NmpiTEDSPcjNUH085BWo0ryvCiCOstqlfSLY9tqPrYHbTty/FukQSO/hq4c+bU1o+wACckKGoFlXzdEauYYH/p+B0uP3LY/3q4LnYq8rIgohYidPAJd/Rk3YwYxQ5crP4ogee+woGGGTqq8UWT/hz9bFV2FZJmBKKXegy/sLXsLGvPorSPdEZ/yN/5kEky7yDd48z/p21eVBX7zYB1cdLxsbcuihqfaqyDvkKgA=
    - secure: v0etksclz8h3E4fgGJG8iG8CWFuhpj9vCiDExlqAzCqBNTIIQjpExe8DEkbFZrHP0JYNMjYZkk6py827cmIDD9yFKV8QOCv1N5PwU9sQHNDxWTZ9awV7HRLTEiX5f8icaj/6/kjjFMQzPuaU8qbVhtZtGkv27egZjxCJgmW95MmScGvIB1ZibjmyUU8FRLlZYq+7kmlTTnSIe3f6hitNq7/Pb6z8KSrUDla9dAT30WBPT40pre2dQl4mOW51T6zHY+4WheXtkm7nPzmC5j+5UEppxbQCcWlcVNmWvKC9Y4VEBMVk9kt6Ln2DdOWhKeW6JZD/gnjPV7ubKAFFZYEZa+IT1EXIjXtbu05yFNy1R52k+60d9LgOFAhhFQocv0fw774Rw9t1kyVh+pmcAATzZR90qm1w4hEIRnqnp2UvZwzGpFQlw7MNuqoDFeh3jRXmRYPG1L7LbIj7HeOl0UKDXFBi4zToENr+Y8N9/+0JJZchiD2F9WZ6fiFApawcT30RWcFeb/oG/v8Jky0n9J+Bd8i/LOWVLxqdEqScojjHzcx3zhywIIQNy4283Hil4d/n+5AE8g2WprNYy2S0gZPBlf0cFlJhHH366Em23rmYj6AUcegzbeUb5QQlqAFsWIShuTOdFpwJ2dhDkp3TBTIotaKq8RQNRpMMXpjUk0JT4Q0=
    - secure: H9n5bEBOsrcnkVYSoTvDnEOGuQ79zNsM9nNwuxrcKm7iiZLPf3HFaRpqSU//TNZTaJZOBe+ARnDvtNnIr5BFPJuKlhk/erkiP+TrBBirh8q2UOny3l9ikTwHt+P/Cwf6s+q/gDDX65mCseyui+9O/0kv/bHV1W9Vi8bGC7E0O2N/6OaKQ4gn8SxuuqQNXukxWrh5yxa6/ZRF+2oDScWlmF2792tkytOkjiS/Z7j9NGB0wSnRq+qHNIdxPZsLmEQDg0OQ32MVsMRlFkjF5+/zm5mD4VRqe5zHNo23Oh+eAhrRG1F3wyzh8cj2Qod4yvMaVpl7hYTv2m6ovRU3avbRZAUgVuTDoFrC5ImW+4mETiAOwprWSpFJzs7tZBVYhUczab4VWcM4rBFraKYWKvuvxir0710ZcxEMdTh/VXfXBE/rUEofWk3VfdDnp84uobmWoUuOMSwj9sWKsEs1LMA1/AO48KybxprGTiAtCjk6FgUsybkZvFzBYWfdGz1jB8RbR2G/xFzM1zb9pwL01Qicg/u64uCYACUDf9kV9uI7wHTwXAhvQSvBh5GWSOFVpnN4lXODdimTEidYyTpsj2nbhRiMv0z4FWXM5XB9Yqmn3Fytipo0uB888s3pIvebgOhrr0mkn5BpkuotiYhaHaxApi31YLGiTZgs/sukf/76TAc=

before_install:
  # add node version, read from .nvmrc
  - nvm install

  # add components and targets
  - rustup component add clippy
  - rustup component add rustfmt
  - rustup target add wasm32-unknown-unknown

  # get wasm-pack, install-update
  - (test -x $HOME/.cargo/bin/wasm-pack || cargo install wasm-pack)
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - cargo install-update -a

  # get the right npm version
  - NPM_VERSION=`node -pe "require('./package.json').engines.npm"`
  - if [ `npm --version` != "$NPM_VERSION" ]; then
    npm install --global npm@${NPM_VERSION};
    fi

  # get the right yarn version
  - YARN_VERSION=`node -pe "require('./package.json').engines.yarn"`
  - if [ `yarn --version` != "$YARN_VERSION" ]; then
    curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION;
    export PATH=$HOME/.yarn/bin:$PATH;
    fi

  - yarn install

before_script:
  # code climate's coverage reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
    > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - './cc-test-reporter before-build'

script:
  - yarn lint
  - yarn test
  - yarn build

after_success:
  - test $TRAVIS_PULL_REQUEST != "false" && npx semantic-release-github-pr

deploy:
  # deploy a git tag, release notes, bump package.json, update READMEs
  - provider: script
    skip_cleanup: true
    script: npx semantic-release
    on:
      branch: master

  # deploy the site
  - provider: pages
    repo: mysterycommand/ferric
    target_branch: gh-pages
    github_token: '$GH_TOKEN'
    allow_empty_commit: true
    skip_cleanup: true
    keep_history: true
    local_dir: dist/
    on:
      branch: master

after_script:
  # report coverage
  - './cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT'
