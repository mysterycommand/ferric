language: rust
rust: stable

cache:
  cargo: true
  directories:
    # cache yarn
    - $HOME/.cache/yarn

    # cache npm
    - $HOME/.npm
    - node_modules
    - $TRAVIS_BUILD_DIR/node_modules

    # cache parcel
    - $TRAVIS_BUILD_DIR/.cache

env:
  global:
    - secure: DHVe5u0va+q6w6SVXZZuxX/sAAFqLPp602s7AfGAfWg6UgAYDllcem/S76GvteLX10Fuy1IJ5M9ilCfIWmir/FqloPjieuN61Ody6aiZqKrED3RvFfA4GO51I9kX/MQ6YESnrzzwcj7AiIOdzavdegC1tfePgq3RwcyuEbsKRd/W+N1F8l1qnDpG76iS5VMzyXP/TVtTDnKAj/q54Vg55XhqnYx3UqjD5Bce0RnSt0aEpZaa5khfiV2hXn0y5aMv0w/uqFx8/q9OqIaoJrkRoBs1kTczpsJt2CRZkSe9kHwhqjoSMsafFYIX1KaE/oKogA510hWgnuTT6xT3wjgXUIVexp/RLoLsA4lUMZmRV1BoJ6hrKSkSBWpz6cS/9SWZ2HUH4Rsl7ZaeUkW9yBLfxyofSJE+bhDpeMVn+ARW+3XShm8wkiu8VaQiHU2clrI+sIYsBfXfuiwtCAqiFmUTGHAG0wB7SSTRY3Fv4hv8svmpTR1tLiQl7HM283BAFlaM6zi5tD8JfoIepfAoWYYc27ZTeSmVELtUSbxklvOmo6c3mfN8IM1ylpAs46ju+bmIEl56eZDdA4secwZAOvvDHykBCVvf6au36BCXNzh/5L2o/1nR4m6pU1UFnLJPhojjNgWWJOiv0BGYG1wbFYBAKwrD6SB/4RSo8pEjjoR8ZmA=
    - secure: ftmK0eLS1wuVAHuO8zTAMUigPVS8dt3y0rneTX9be9B0ld2wiGDU0Ve2UVfcEobWuuA+Vvi03uFfJWzVDM0dTNdDiFGr4o1xIZoZaiSew0s7dK52g0G0l+TN55sNX0i2ZiHtWPso0bRZab+pH2pHbW5HYjvUPk6JdElfTNTCc+vXCk7oQ8fdtm+C9UE8oVxjzJMo3Kec6HWbFrq/HqtPo7W42+It6DYbB6IPSoSRVkonMGeGVfCAmWgSZLMhfQ0vUDVvvliZjgbJm6V9mDAWc0S5K8JFJ7Ex/5X+8rEdNj/D2LC02sKOB6fhAvgOzThhAimVl2SNrMt0PkzOMJIQvGBlHF87TWU5TW8SzL3KRjzkVhGKldyB95nmQ7BrhGonvdVG26jpMEuvAVRbf/e/EaQ76zDk+2PfHVv1gUzxi4SChwD3+g7VUEVFUtUklM+D7kQkNT9pELJlEkZ5KEk78Tnv6ExQ/tbNBzmgfBIzkOzgWZzGz7qgq86W48QxkigO6nS0WKCaPnFa8hvb1vZT5fopEmeAJMygbvOXju7wN5Y2kWCqAvugyJgSju0WZCuQr4jJqSihThdW0Wu+f4WN+llJDV8WKygGoboDC5vPKkiBdX4H03kVU82FEtiM985gZDIZhS0OYQUPP2cJEqEH9RZulBX3ngo4zKpvAGXjYuc=
    - secure: r00wVC0Dt39EX3tf+a64uT4PGptVjrVTwxRRvrcHNW/yVpRYGjo/4dNgL82hNV18TQ8xIccaMYVakBUyWTw+EvZYciV9BIdtIFFvLtaNLa3xqdrDAERE2J1p/AUDClwDUzVV3gMe7VuVVlfaEeYoLO2DMPFzK4zYzNXuBxOI5ni9shaCnijiwwDjgdsJz5cvGrwH4eFWJpxZloWft5oVU77chB73zLXbf6+ub0kfQ53UpnCGoDYNbDXSojSwa6GcPdi8UxBcFjqrgeYL+qRcMo+X3GKHS8cD+maIRV/rPluDmnORD/sbWhgTO4QGobW4pyWfB7GBwHHzYnvRDnpCXgkw+9x+eHT5ZzV3wMV7ENmS6W9bExxPQ80lSg7AjiaCXtM4F0Lfl+3bhNyBfiG+Kf69SlMUHmXycUT+95ySXHtQ7z0F5QvQin0ntU1RO1MIUP1vdBbUTTvaLUEjldjmSx4pJu5nCmqPwE8ncAxfMeLvAYznVJnZYd592IThP705944GctpNGoP8QwZZdEZmeY/MXHi1lytf8bfzXZwhZPRcNvG2Fc0kSfvGi8uM53+Ct9s8HElT2/slybqlCOqGDEPGAuVeYBp108EvpdowEfNWjKMgTVkRK2h8Ix/CN96rkq/NvY5Jg5t44tPbXgTgyEcaA3z512EKKN0DgdOQ7pM=

before_install:
  # add node version, read from .nvmrc
  - nvm install

  # add components and targets
  - rustup component add clippy
  - rustup component add rustfmt
  - rustup target add wasm32-unknown-unknown

  # get wasm-pack, wasm-bindgen, install-update
  - (test -x $HOME/.cargo/bin/wasm-pack || cargo install wasm-pack)
  - (test -x $HOME/.cargo/bin/wasm-bindgen || cargo install wasm-bindgen-cli)
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - cargo install-update -a

  # get the right npm version
  - NPM_VERSION=`node -pe "require('./package.json').engines.npm"`
  - if [ `npm --version` != "$NPM_VERSION" ]; then
    npm install --global npm@${NPM_VERSION};
    fi

  # get the right yarn version
  - YARN_VERSION=`node -pe "require('./package.json').engines.yarn"`
  - if [ `yarn --version` != "$YARN_VERSION" ]; then
    curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION;
    export PATH=$HOME/.yarn/bin:$PATH;
    fi

  - yarn install

before_script:
  # code climate's coverage reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
    > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - './cc-test-reporter before-build'

script:
  - yarn lint
  - yarn test
  - yarn build

after_success:
  - test $TRAVIS_PULL_REQUEST != "false" && npx semantic-release-github-pr

deploy:
  # deploy a git tag, release notes, bump package.json, update READMEs
  - provider: script
    skip_cleanup: true
    script: npx semantic-release
    on:
      branch: master

  # deploy the site
  - provider: pages
    repo: mysterycommand/ferric
    target_branch: gh-pages
    github_token: '$GH_TOKEN'
    allow_empty_commit: true
    skip_cleanup: true
    keep_history: true
    local_dir: dist/
    on:
      branch: master

after_script:
  # report coverage
  - './cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT'
