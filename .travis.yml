language: rust
rust: stable

cache:
  cargo: true
  directories:
    # cache yarn
    - $HOME/.cache/yarn

    # cache npm
    - $HOME/.npm
    - node_modules
    - $TRAVIS_BUILD_DIR/node_modules

    # cache parcel
    - $TRAVIS_BUILD_DIR/.cache

env:
  global:
    - secure: O8iYIro/4YGFSdQXJaEJ5Ek/ZFK0px2jkM5od6FQ+EMs7DE+C7amifkQG3e3qDE9YRAWZbReHi9luqy+U/1az8pYn2RgS6NUHrKCPvdXTiSITCpPcu9h0b7ep7kUXKzxZ31Hp9R8oczpbA8QCgEVEY9VsVkHmFwf6dhPLh44RJJBpPsK/1KW78A3ULMLy+4VbeARfkAxdcdlBqcJ1Mw0pNDKrnHwrcmcGEpJdTpv5IKHXI/sStgzCrV3jZPKXKTjnSx5o3cQmNK0nzkgWyGbKi0rumyGwph2tPAf9xF9/+eADYDo/aqXWcOhafVl6QgSKm9R5J79E/y0GiJfX5HKGIpNFbRvV66VKFVoSZeOsWoKKFM5/lp403dQulPrPGlInTeKMme3bG2FkMfmh/zW6TlgSQmpjvUR/0zFkyCUqrrSEMIBEtra//Ic6iCE9D0SMHTnVU6kf6HlVoGc5+UzPcZLga3+enut7vkr84YZon2+tDKuD0TrK28nhqbcL5tZ75ozlZzoticBvZmQGxDKrm/U+45Xhn7jJRSDDWjTQaxVoAchcxaxcy1vPf/j4mg4pKJXS9iSXBt62nq4Igkk90RMfj0q9zgvp4qy4FEQLgv8wO89GighJbYFMF5PbMyczPUqqr1IMMxF8SdZzeNvbhGvXjru0dY6doL0fiAhxII=
    - secure: ATHI5ETQ6Y/gb/wNrPxaeK7nKH4ByoYvU/bU3q0/f8DTRq2HM426UpIVaFtZ7DAIRAwduxRoEkmj7VR0UrkQdGN884cqHL5/VWBytZAQ3CfGnTB+Ex5hP56Y9E8dp4H3ykazM70hi0Z/wy2oKHuUW8Mxb3EiwKd04yDNZuoXaao4OP9T4slm952jj9JX5iQrLSVQ3750edcYtyjgBxnPoWLbGlrITLVoc4deGmEI/G7mGjhYvVLzqn8LcvwJkfOZrwQQfcDoehqtpRZwRVe/EgzD9DdzeMrn0+LxJpRbHS4e9Mf/wJrYKfrG9/QDNPLcnWfUdRENHeySs8PAG7VS//tMkbYaxXSNqC1OxPu1LKdWDUkfx6kr/9MTX2z3j3h0J1qZ7ceahHIlFfvHiwlfYACPAgH0GJLzgrDAl8eq6/Obr0dSSQPjEUmoPgtOCny9AfTocmqd9MQUeUtcugRpgb9DyAoGe8IQxiWWUtT9WH2lbq43a/GiKRK574C4bS6B0wnA17OyeOHIrO44HcPu8iULxSkn8Xv4uJHTTNffV6+4RPHas008G9sEQGHcvCtJQP5g3C6CjfsiGfF4FyoizZ2+b7iaZNA73o0OfYwMRQ6Ldi+VLM+NDR975ipp6Dth07nbRj3HCBtLGoumf5NMqjG9Gq5dMteMntkRZ2kk91E=
    - secure: tEJ1mMcleQ1NH9gHkEP1jArkSXSGpTBDTDP21uBAUFsrQYlq6F8gpFlVDiXo+gVwVfY2dnHVdfj57Hmv+GDi5Ba/F2IkSqcew6eQmswETh2vVvPvjNPYMUKz2Gb5GQMMX4uQX+oPnbqtTyrQ2AX0M71hRRJNsNcb/icRPxHBx+SEkdPoHotO0+DzIT/FRMv7e/jfUsr/wU0uW/H0sed/gPHtiAeXGxnvfbp+B4ndM4K+01k/sQgLyocTGVGNb5CGFuV5IRsAJpEmKrXgSVXDDlBEalJKNAla4+3SJBPc+Vhn4IIU1PI1W9EBFx3ydezMDvTloGSGiLlI6qW7+dcsajAQXl/qMJuOJ+ZCFBpkuGMsKoeJylquBBPmw4FPn2FN7VMML6oISOUPRdb8BRDPavoW4ftyzS2KeeVeAPVO8dlsxzNVlyz0wQ9n0KBWIN+6A7kOqAqpn0Pwg+TRCWnPuPEp2qYrrLSS71280zSQ2rtHFS1l76ow2l1EdBKcqIMaLMyzp3BZFd4LcbGVA598DUhGpIsBIU8rhphom5hV3vS1HbmovsBYO8qa9zIP1++hqPH7UPeXYDdXYh7kKnk/Bj/iguGSMPUKD0txS3Z5f1U/zJeI6YEDurtLAcZGAW5mNStghhXeJzn7cwbmNPNeyLbW3cYmqbHUcPJkG/0fX64=

before_install:
  # add node version, read from .nvmrc
  - nvm install

  # add components and targets
  - rustup component add clippy
  - rustup component add rustfmt
  - rustup target add wasm32-unknown-unknown

  # get wasm-pack, install-update
  - (test -x $HOME/.cargo/bin/wasm-pack || cargo install wasm-pack)
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - cargo install-update -a

  # get the right npm version
  - NPM_VERSION=`node -pe "require('./package.json').engines.npm"`
  - if [ `npm --version` != "$NPM_VERSION" ]; then
    npm install --global npm@${NPM_VERSION};
    fi

  # get the right yarn version
  - YARN_VERSION=`node -pe "require('./package.json').engines.yarn"`
  - if [ `yarn --version` != "$YARN_VERSION" ]; then
    curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION;
    export PATH=$HOME/.yarn/bin:$PATH;
    fi

  - yarn install

before_script:
  # code climate's coverage reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
    > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - './cc-test-reporter before-build'

script:
  - yarn lint
  - yarn test
  - yarn build

after_success:
  - test $TRAVIS_PULL_REQUEST != "false" && npx semantic-release-github-pr

deploy:
  # deploy a git tag, release notes, bump package.json, update READMEs
  - provider: script
    skip_cleanup: true
    script: npx semantic-release
    on:
      branch: master

  # deploy the site
  - provider: pages
    repo: mysterycommand/ferric
    target_branch: gh-pages
    github_token: '$GH_TOKEN'
    allow_empty_commit: true
    skip_cleanup: true
    keep_history: true
    local_dir: dist/
    on:
      branch: master

after_script:
  # report coverage
  - './cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT'
