language: rust
rust: stable

cache:
  cargo: true
  directories:
    # cache yarn
    - $HOME/.cache/yarn

    # cache npm
    - $HOME/.npm
    - node_modules
    - $TRAVIS_BUILD_DIR/node_modules

    # cache parcel
    - $TRAVIS_BUILD_DIR/.cache

env:
  global:
    secure: Z12ZvoBDnztjCmR493dg6Hyhtkj3hrm+QWOhYeji6b0yqwhxPTtib9gWfbwp2ZSSoByEcjlmJeyVom37wxSgU0wrVRFw6AoLUTpQ2qXsufWNC8ia1Shf01Q3PmyZaBWPx5GB6mY0mw0Gtoo1lPKWSCrEeIdFiACXiBv66VCumYnTIeUUC96D6KsxKDmLcJO6KlAAbNnqf2A8HTfUKCtLyhNu5+oYj9z+AGNDorADD024UjGodbG6SbqZR/mPfiiJgim7u86D70C35b9NqB7YpnaZj87H4jvY+OvVdfmkS/ebPmsUAupQCXbSFptcGWVXEdRkmJWtJEMTKdF84aCt9VuGM4nhkdt1wEdf3TmVz+uVonElYGv8+SARhKdcNY48+VHKeg7+LoLlj4wq3EZNvc5YohT0JkznZwfX1IzThQWKZvZlYrf5eDIhLddkk0psax7Mp+ZMJAos6NBv2HYT/eVoSEe3SYe/OSj/usQa0CdyLVEBohfWNxJzP5AipGzorQZF0/8Rx1hSDi/UlOzd4JR957YktVfcexP6SZRDOtDjHjQnkGRTRMKVmbkCpoV459II5T+DAoHK9VrkLxSh07FvWJ13spI+nJOxBSf+jC16KPp9WhglMus5tl43lWQHDMloZE4FVTgQ6Osbik4QWCWuLGd6rDZpQgrORnFwy9A=
    secure: ap35a64QIQGBmdGqOj910pZcttlNisfT4TvX4aVlCbNq07gjcv5TFNDt7EewS8AQyObv8J1AEyqB1VYEtGRiVdcwVcRsBo6wSKiJW7KiMYILGl71s/MMvWZSjcB6C8VIKFgk9Y6ZNK5omqxbk3F5csk5Agw89+chjGB5XhZl3frUr1q3Xkz/JtL7t58zQXNSG+DHbF1gU7rghEwhWRvf4XD1cU6WZTSn+CYm+xX/yU7fId4ztGkC7My7ybV+UeqRwb/8BX/cAdD1eZ45PJUMli41OWMIMXedebAkS6+zfHzxXMYWJbFwql3EoBuC3+HSJKoAy17NcyGByL0GmCZYeES5dIhkB38/v17200/lr+8BCriFC4w4F7FvoUTGR1nCqItlcUKScjQwcMuWaeL08JzmJ8XEyaW30LLikAKMvDmR1Fk5drAurFD0+5+lJyLi2huUXtT4x+3BlnvSZGCL5cTEKpRsUa9ZZ/vFC/11Mo0IZXPbnizxZ4JqTYVvLp5GgmK3N7qa5ebvBpSD1iJ2nVVPzHEOsBpoXEm5Qpr+OnZqs0pHGoWDH2SeGZ+gfPOLMRNLMj9F5NpsODmKjQ493Z8ExaTVXQqW+5dTV4Ks1Hu2150NS9xICK2WHnVkJyugYxZAqegoG6QFhGIentzSQHMWQvVo/J5oBle98vfD8f0=
    secure: dFCUdCXhH8qCusOaf72r1mfI/ZB6Av5FGMvI7PLuGUGuyVBORrBXAsu6EniDTfZ1eWHO5OCHfIoZ9pbpQ9wf6dELQzQfcOHQmXxrzdKk9o/3IAbzJvGELq6zezW/CEJ4q7EmKx4f6i+cAxKS2M7sDOMgG374a6dokfEj7SYYeadcusnY9gn0tQu7oza8lDplnM2qPyYm3oTtfG8ab3sbXReWXVQZDCleGUGyfc/KOZeBT1zYPQssZyFXCargcu6o9lTeS/kBJVXqDFKeP1R66O74J0aWtYXWUUZT04akhSP+iGt5SmjdoBzRIhoRjiXFs2+Kl49TO/SHov0mBwaLyTfplhY1SQlvsA68ysXFHPDC210a95WmXZssOC6w/t2DjXX4lEkYMe/W1Z1sTvy9fNwfjxd20bWETi6+yJtPzn2rT7DAOAuzkG0+KLCHUaNQyYzDo7dExr3To+Wor73hfCILv4rIZh2IvnK4CGYnnsEufOR/XMjKKLbdyvspjm5hJ50hlqNchaYO0h+8hniG05PsbH7suHXrgHC77HNROVw+S4uirWeV1fR1mzL701q7QmW18/cw7PU9SEzeeoEu82ngu2Yu8zF9eMnq7WCQydHWN/DVIW2ruCErAzWiiC7OXTDDSYTkMKIyqBZXuMTfCVjXWX7MflZGgerVPspqPXM=

before_install:
  # add node version, read from .nvmrc
  - nvm install

  # add components and targets
  - rustup component add clippy
  - rustup component add rustfmt
  - rustup target add wasm32-unknown-unknown

  # get wasm-pack, install-update
  - (test -x $HOME/.cargo/bin/wasm-pack || cargo install wasm-pack)
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - cargo install-update -a

  # get the right npm version
  - NPM_VERSION=`node -pe "require('./package.json').engines.npm"`
  - if [ `npm --version` != "$NPM_VERSION" ]; then
    npm install --global npm@${NPM_VERSION};
    fi

  # get the right yarn version
  - YARN_VERSION=`node -pe "require('./package.json').engines.yarn"`
  - if [ `yarn --version` != "$YARN_VERSION" ]; then
    curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION;
    export PATH=$HOME/.yarn/bin:$PATH;
    fi

  - yarn install

before_script:
  # code climate's coverage reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
    > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - './cc-test-reporter before-build'

script:
  - yarn lint
  - yarn test
  - yarn build

after_success:
  - test $TRAVIS_PULL_REQUEST != "false" && npx semantic-release-github-pr

deploy:
  # deploy a git tag, release notes, bump package.json, update READMEs
  - provider: script
    skip_cleanup: true
    script: npx semantic-release
    on:
      branch: master

  # deploy the site
  - provider: pages
    repo: mysterycommand/ferric
    target_branch: gh-pages
    github_token: '$GH_TOKEN'
    allow_empty_commit: true
    skip_cleanup: true
    keep_history: true
    local_dir: dist/
    on:
      branch: master

after_script:
  # report coverage
  - './cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT'
