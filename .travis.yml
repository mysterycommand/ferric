language: rust
rust: stable

cache:
  cargo: true
  directories:
    # cache yarn
    - $HOME/.cache/yarn

    # cache npm
    - $HOME/.npm
    - node_modules
    - $TRAVIS_BUILD_DIR/node_modules

    # cache parcel
    - $TRAVIS_BUILD_DIR/.cache

env:
  global:
    - secure: ENYuyj9G/N5XRy18eehbTNPxT0b94gNTr/7fIqIfAhvzlLSlcsA+X51fZVUxd3Ui6eTxHWoEgNwsqG+0GmUTrs+Of+hIMjH5Kzra9yUoDv16DaP9adlOlde2ieg5syjjCFo8pG5bdI26aliypUkqTlUIXA8NqanLvHeGaMBO7nhymqBNYoe4bcFnqsugFF6uOvF2tXXMqwc0qRAjSyYHiobnZwGpEiQfYQQj6f2c5TC3ZLzKv7ikH430sE03tKM62M4UGzbyl8q/GdMC9nnKzy6dRirghICqD9q2hauJFWSjv9Qr4JIyfZn49IONkTfz8pxR449vNc/15fyenrxvHj677Lgz85thP95NHu029AnravbQ+xee65iNjMlCMmD0Cg/bdYkR/qY8C1HlPW8EHCcFLKKkGWGIjA8le8JVbJNrY/R/ls4kfkMXMm/sFmUbyCj4pdugtBWus+Ep9YejGZpqeYuWyEf58EpMcb8WSDtBpxEEyP9YM1e0j7YdmNr0MOV8gUEH+X9x5zMzVWUZfdddhyMrCykiTSXOktD1U4FzcgR8hTUYWcjNuU44PnT9lBzCEjhN9V5fIwdTjhFeHhPURiqlGHwiAGdv358TAtatn++9EqE14YMzPyT2L5OfpLeMiKmtQJxAN6vDf/42xrdMoguXHz00ObbpK9bq4Wk=
    - secure: kqjLjhIkedNaCw+ikkuYL/Q3nHMPXr5z1xm+kw9psdpHxUuHV/L02L/FvN/CgJV0jfFPALovCUY4tXNRspv+L1Tz03gMrGCk91gfX5S9DUKhycK/djdfw6N9hFT/W/tW8xit0fromiJFP4D3FUM/EygicmCtesENjl5u4AcXVEMOVTLRqA61qpQBark0K8OhWTDWPFNOvEJ/9pIEFxjAwsIJLtD31Cvu1o63xEB09c0aGPEGJkKpCQY9RXBFgKigC5AFV5N96jGYw2X+CbyQDrJx0A3ceB+e7w2ab4BcS8G+EWqKo/VzWCLuwz6kcQ7rjXhIPkO6BlpQ2hfiKRrdh0EVSI0X4bKN2mx6XKbey08af13AqCKqDTfcprcoU1MRT7X4qZ4B5qRNOlAZ/bDtGq6Ggz8EOEHQKHqESQ2bX5HcLmke0FcXeA56iKpNQw02VpgfyonqNZH8loP+vtQQ7vM3NV9yORZsbdrL3H7hPB3BsZesQlNI0Mif713YEBFImofi2rG3jH4/jefDa5cWhWHJSAMK4raUQNIRL8+pmV9P52quh3NfaSYQPoOtmwCJb45fNUmAcsQ59tbeGNN5Ife+bs0pfPIkNwfkvMY4fGIdhQpsPLDIlL9KOpJaFvPOJMRPEZJ8+K9SeE6XCbMw1s+am1b4DdGEeuKayJ/xCrI=
    - secure: KWpaPKOKKaDsuPOmuH2DzUI9RgXN7rhFCzsZzvdl3jSbrIBsjlv8FKvsAn+ftfyO5TojOXMxv8+QhuT57UK4Z14lEGCPidXnMHWKgG97ImMJJ7NN+eSEOMl+U4wTsI/fOpe1j4M7qjlfOGEOGptTKQzpfApG71zb+3HykLF90cACBeGhq7V1WfpYrz7jQv6OSW88Pky6gbu2i/hExSQUOg8WrLpPxU3rfXuQD3Apym4oYCB1g0oxndw/CuSlNejHFmooSDlyNUuddN4cNTw0fjZXn03sEsB0o8SnT36+IaLZU5BcZHYdFDFLv+k6Mz+hZyK/6IQ0Q6Neftv+7v3asVaVxb5NnBlD/bGMv3l474Iskp9+79vvCFgCjxTl56bSzsivL1LQ/GKvSd6FYf+iv27jip48r/t/dUVkrP3wxzgKWQ3iRTURM/ZpWKZhkWFcplUnog7nrt0076i9FT32Cq9JIpJJB5nqX89EoOht5jJPRQctkcVfkWvvpSmKy5MVXjtcSehBs7zMRpcrhpROGCR4XR6IIDA3HXk5kNllFkmAK0SgfteTmmvr4GUXQ1W1asI30XCTgFsMDoyApVse0Kk2s1VufKExv3ItbDIlflBI8jzs7PZdmCnZrhVGMOaUQPTyLclBpVs5VBqMZCiyTq2Vk0FNHjd+8GVbMwKSoog=

before_install:
  # add node version, read from .nvmrc
  - nvm install

  # add components and targets
  - rustup component add clippy
  - rustup component add rustfmt
  - rustup target add wasm32-unknown-unknown

  # get wasm-pack, install-update
  - (test -x $HOME/.cargo/bin/wasm-pack || cargo install wasm-pack)
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - cargo install-update -a

  # get the right npm version
  - NPM_VERSION=`node -pe "require('./package.json').engines.npm"`
  - if [ `npm --version` != "$NPM_VERSION" ]; then
    npm install --global npm@${NPM_VERSION};
    fi

  # get the right yarn version
  - YARN_VERSION=`node -pe "require('./package.json').engines.yarn"`
  - if [ `yarn --version` != "$YARN_VERSION" ]; then
    curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION;
    export PATH=$HOME/.yarn/bin:$PATH;
    fi

  - yarn install

before_script:
  # code climate's coverage reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
    > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - './cc-test-reporter before-build'

script:
  - yarn lint
  - yarn test
  - yarn build

after_success:
  - test $TRAVIS_PULL_REQUEST != "false" && npx semantic-release-github-pr

deploy:
  # deploy a git tag, release notes, bump package.json, update READMEs
  - provider: script
    skip_cleanup: true
    script: npx semantic-release
    on:
      branch: master

  # deploy the site
  - provider: pages
    repo: mysterycommand/ferric
    target_branch: gh-pages
    github_token: '$GH_TOKEN'
    allow_empty_commit: true
    skip_cleanup: true
    keep_history: true
    local_dir: dist/
    on:
      branch: master

after_script:
  # report coverage
  - './cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT'
