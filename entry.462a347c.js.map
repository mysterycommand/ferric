{"version":3,"sources":["../pkg/ferric.js","lib.rs","entry.ts"],"names":["init","__exports","wasm","run","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","getStringFromWasm","ptr","len","decode","subarray","__wbg_error_4bb6c2a97407129a","arg0","arg1","varg0","slice","__wbindgen_free","console","error","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","__wbg_new_59cb74e423758ede","Error","getObject","passStringToWasm","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeInto","arg","size","__wbindgen_malloc","offset","mem","code","charCodeAt","__wbindgen_realloc","view","written","buf","encode","set","cachegetUint32Memory","getUint32Memory","Uint32Array","__wbg_stack_558ba5917b466edd","ret","retptr","stack","retlen","__widl_f_log_1_","log","__wbindgen_string_new","p","l","__wbindgen_throw","dropObject","__wbindgen_object_drop_ref","i","module","result","imports","URL","Request","response","fetch","WebAssembly","instantiateStreaming","catch","e","warn","then","r","arrayBuffer","bytes","instantiate","Instance","instance","exports","__wbindgen_wasm_module","require"],"mappings":"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","file":"entry.462a347c.js","sourceRoot":"../src","sourcesContent":["\nconst __exports = {};\nlet wasm;\n\n/**\n* @returns {void}\n*/\nexport function run() {\n    return wasm.run();\n}\n__exports.run = run\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n\n    varg0 = varg0.slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n\n    console.error(varg0);\n}\n__exports.__wbg_error_4bb6c2a97407129a = __wbg_error_4bb6c2a97407129a\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction __wbg_new_59cb74e423758ede() {\n    return addHeapObject(new Error());\n}\n__exports.__wbg_new_59cb74e423758ede = __wbg_new_59cb74e423758ede\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            arg = arg.slice(offset);\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + arg.length * 3);\n            const view = getUint8Memory().subarray(ptr + offset, ptr + size);\n            const ret = cachedTextEncoder.encodeInto(arg, view);\n\n            offset += ret.written;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            const buf = cachedTextEncoder.encode(arg.slice(offset));\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + buf.length);\n            getUint8Memory().set(buf, ptr + offset);\n            offset += buf.length;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction __wbg_stack_558ba5917b466edd(ret, arg0) {\n\n    const retptr = passStringToWasm(getObject(arg0).stack);\n    const retlen = WASM_VECTOR_LEN;\n    const mem = getUint32Memory();\n    mem[ret / 4] = retptr;\n    mem[ret / 4 + 1] = retlen;\n\n}\n__exports.__wbg_stack_558ba5917b466edd = __wbg_stack_558ba5917b466edd\n\nfunction __widl_f_log_1_(arg0) {\n    console.log(getObject(arg0));\n}\n__exports.__widl_f_log_1_ = __widl_f_log_1_\n\nfunction __wbindgen_string_new(p, l) { return addHeapObject(getStringFromWasm(p, l)); }\n__exports.__wbindgen_string_new = __wbindgen_string_new\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n__exports.__wbindgen_throw = __wbindgen_throw\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropObject(i); }\n__exports.__wbindgen_object_drop_ref = __wbindgen_object_drop_ref\n\nfunction init(module) {\n    let result;\n    const imports = { './ferric': __exports };\n\n    if (module instanceof URL || typeof module === 'string' || module instanceof Request) {\n\n        const response = fetch(module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            result = WebAssembly.instantiateStreaming(response, imports)\n            .catch(e => {\n                console.warn(\"`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                return response\n                .then(r => r.arrayBuffer())\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            });\n        } else {\n            result = response\n            .then(r => r.arrayBuffer())\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        }\n    } else {\n\n        result = WebAssembly.instantiate(module, imports)\n        .then(result => {\n            if (result instanceof WebAssembly.Instance) {\n                return { instance: result, module };\n            } else {\n                return result;\n            }\n        });\n    }\n    return result.then(({instance, module}) => {\n        wasm = instance.exports;\n        init.__wbindgen_wasm_module = module;\n\n        return { run };\n    });\n}\n\nexport default init;\n\n","import init from '../pkg/ferric.js';\nmodule.exports = init(require('../pkg/ferric_bg.wasm'));\n","import { run } from './lib.rs';\nimport './style.css';\n\nrun();\n"]}