{"version":3,"sources":["../pkg/wasm-loader.js","../pkg/ferric_bg.js","lib.rs","entry.ts"],"names":["isFetchable","value","URL","Request","isWasmInstance","WebAssembly","Instance","canInstantiateStreaming","instantiateStreaming","streamErrorMessage","join","instantiate","request","imports","then","response","arrayBuffer","bytes","instantiateRequest","catch","e","console","warn","instantiateModule","module","result","instance","load","wasm","fetch","__wbindgen_wasm_module","exports","lTextDecoder","TextDecoder","require","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","run","WASM_VECTOR_LEN","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","ptr0","stack","__wbindgen_malloc","__wbindgen_realloc","len0","__wbg_error_4bb6c2a97407129a","error","__wbindgen_free","__wbg_log_cc6b9ddc6ca5449d","log","__wbindgen_throw","init","wasmUrl","wasmExports"],"mappings":"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","file":"entry.9255b60d.js","sourceRoot":"../src","sourcesContent":["function isFetchable(value) {\n  return (\n    value instanceof URL ||\n    typeof value === 'string' ||\n    value instanceof Request\n  );\n}\n\nfunction isWasmInstance(value) {\n  return value instanceof WebAssembly.Instance;\n}\n\nconst canInstantiateStreaming =\n  typeof WebAssembly.instantiateStreaming === 'function';\n\nconst streamErrorMessage = [\n  '`WebAssembly.instantiateStreaming` failed. Assuming this is because your',\n  'server does not serve wasm with `application/wasm` MIME type. Falling back',\n  'to `WebAssembly.instantiate` which is slower. Original error:\\n',\n].join(' ');\n\nfunction instantiate(request, imports) {\n  return request\n    .then((response) => response.arrayBuffer())\n    .then((bytes) => WebAssembly.instantiate(bytes, imports));\n}\n\nfunction instantiateRequest(request, imports) {\n  return canInstantiateStreaming\n    ? WebAssembly.instantiateStreaming(request, imports).catch((e) => {\n        console.warn(streamErrorMessage, e);\n        return instantiate(request, imports);\n      })\n    : instantiate(request, imports);\n}\n\nasync function instantiateModule(module, imports) {\n  const result = await WebAssembly.instantiate(module, imports);\n  return isWasmInstance(result) ? { instance: result, module } : result;\n}\n\nexport async function load(wasm, imports) {\n  const { instance, module } = await (isFetchable(wasm)\n    ? instantiateRequest(fetch(wasm), imports)\n    : instantiateModule(wasm, imports));\n\n  load.__wbindgen_wasm_module = module;\n  return instance.exports;\n}\n","import { load } from './wasm-loader.js';\nlet wasm;\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nexport function run() {\n    wasm.run();\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbg_log_cc6b9ddc6ca5449d = function(arg0) {\n    console.log(getObject(arg0));\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\nexport default function init(wasmUrl) {\n  return load(wasmUrl, {\n    ['./ferric_bg.js']: {\n      __wbindgen_string_new,\n      __wbindgen_object_drop_ref,\n      __wbg_new_59cb74e423758ede,\n      __wbg_stack_558ba5917b466edd,\n      __wbg_error_4bb6c2a97407129a,\n      __wbg_log_cc6b9ddc6ca5449d,\n      __wbindgen_throw\n    }\n  }).then(wasmExports => {\n    wasm = wasmExports;\n    return {\n      run\n    }\n  });\n}\n","import init from '../pkg/ferric_bg.js';\nmodule.exports = init(require('../pkg/ferric_bg.wasm'));\n","import { run } from './lib.rs';\nimport './style.css';\n\nrun();\n"]}